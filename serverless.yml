org: kristinalindquist
app: biosymbolics-pipeline
service: biosymbolics-pipeline

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10
  stage: ${opt:stage, 'dev'}
  timeout: 300
  vpc:
    securityGroupIds:
      -  sg-0970987c8996d7c41 # default
    subnetIds:
      - subnet-097d7452bff44a9bc
      - subnet-0af5fe0054c832df3
      - subnet-0dd6c80089140ec77
      - subnet-0d81aad61a0e216d9
      - subnet-063ab146c30e74e8a
      - subnet-072abb215bce7b322
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
          Resource: "arn:aws:ssm:*:*:parameter/biosymbolics/pipeline/*"
  apiGateway:
    apiKeys:
      - free:
          - ${ssm:/biosymbolics/pipeline/api/free-key}
      - paid:
          - ${ssm:/biosymbolics/pipeline/api/paid-key}
    usagePlan:
      - free:
          quota:
            limit: 50
            period: DAY
      - paid:
          quota:
            limit: 100
            period: DAY
  environment:
    CACHE_BUCKET: biosym-patents-${self:provider.stage}
    DATABASE_URL: ${ssm:/biosymbolics/pipeline/database/patents/runtime_url}
    ENV: ${param:ENV, 'dev'}
    MONGO_URI: mongodb+srv://kristin:LcVacKsgrZ6EQ7N8@biosymbolics.i6psynp.mongodb.net/
    OPENAI_API_KEY: ${ssm:/biosymbolics/pipeline/openai/api_key}
    PYTHONPATH: ./src:./:/opt/python:/opt/python/lib/python3.10/site-packages
    SEC_API_KEY: ${ssm:/biosymbolics/pipeline/sec/api_key}
    TOKENIZERS_PARALLELISM: False

functions:
  search-patents:
    events:
      - http:
          path: patents/search
          method: get
          cors: true
    handler: src.handlers.patents.search
    layers:
      - Ref: PythonRequirementsLambdaLayer
  autocomplete-patents:
    events:
      - http:
          path: terms/search
          method: get
          cors: true
    handler: src.handlers.patents.autocomplete
    layers:
      - Ref: PythonRequirementsLambdaLayer
  summarize-patents:
    events:
      - http:
          path: patents/reports/summarize
          method: get
          cors: true
    handler: src.handlers.patents.reports.summarize
    layers:
      - Ref: PythonRequirementsLambdaLayer
  patents-over-time:
    events:
      - http:
          path: patents/reports/time
          method: get
          cors: true
    handler: src.handlers.patents.reports.aggregate_over_time
    layers:
      - Ref: PythonRequirementsLambdaLayer
  describe-terms:
    vpc: ~ # no need to be in VPC; needs OB access
    events:
      - http:
          path: terms/describe
          method: get
          cors: true
    url:
      invokeMode: RESPONSE_STREAM
    handler: src.handlers.patents.describe
    layers:
      - Ref: PythonRequirementsLambdaLayer

plugins:
  - serverless-python-requirements

package:
  # individually: true
  patterns:
    - "!**"
    - "src/**"
    - "!**/__pycache__/**"
    - "!src/scripts/**"
    - "!src/data/**"
    - "!**/test/**"

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    strip: true
    slimPatternsAppendDefaults: true
    slimPatterns:
      - "**/__pycache__/**"
      - "**/tests/**"
      - "**/botocore/data/**"
      # - "**/libopenblas64_p-r0-5007b62f.3.23.dev.so"
      # - "**/polars.abi3.so"
      - "**/cygrpc.cpython-310-x86_64-linux-gnu.so"
    fileName: src/handlers/requirements.txt
    layer: true
    noDeploy:
      - pytest
      - grpc
      - pandas

resources:
  Resources:
    RDSCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        MasterUsername: ${ssm:/biosymbolics/pipeline/database/patents/main_username}
        MasterUserPassword: ${ssm:/biosymbolics/pipeline/database/patents/main_password}
        DatabaseName: ${ssm:/biosymbolics/pipeline/database/patents/db_name}
        Engine: aurora-postgresql
        EngineMode: serverless
        ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 8
          MinCapacity: 2
          SecondsUntilAutoPause: 300
        EnableHttpEndpoint: true
        StorageEncrypted: true
    S3:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: biosym-patents-${self:provider.stage}
        AccessControl: Private
        VersioningConfiguration:
          Status: Enabled
        ExpirationInDays: 30
